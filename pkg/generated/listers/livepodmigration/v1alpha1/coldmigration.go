/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/ubombar/live-pod-migration/pkg/apis/livepodmigration/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ColdMigrationLister helps list ColdMigrations.
// All objects returned here must be treated as read-only.
type ColdMigrationLister interface {
	// List lists all ColdMigrations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ColdMigration, err error)
	// ColdMigrations returns an object that can list and get ColdMigrations.
	ColdMigrations(namespace string) ColdMigrationNamespaceLister
	ColdMigrationListerExpansion
}

// coldMigrationLister implements the ColdMigrationLister interface.
type coldMigrationLister struct {
	indexer cache.Indexer
}

// NewColdMigrationLister returns a new ColdMigrationLister.
func NewColdMigrationLister(indexer cache.Indexer) ColdMigrationLister {
	return &coldMigrationLister{indexer: indexer}
}

// List lists all ColdMigrations in the indexer.
func (s *coldMigrationLister) List(selector labels.Selector) (ret []*v1alpha1.ColdMigration, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ColdMigration))
	})
	return ret, err
}

// ColdMigrations returns an object that can list and get ColdMigrations.
func (s *coldMigrationLister) ColdMigrations(namespace string) ColdMigrationNamespaceLister {
	return coldMigrationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ColdMigrationNamespaceLister helps list and get ColdMigrations.
// All objects returned here must be treated as read-only.
type ColdMigrationNamespaceLister interface {
	// List lists all ColdMigrations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ColdMigration, err error)
	// Get retrieves the ColdMigration from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ColdMigration, error)
	ColdMigrationNamespaceListerExpansion
}

// coldMigrationNamespaceLister implements the ColdMigrationNamespaceLister
// interface.
type coldMigrationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ColdMigrations in the indexer for a given namespace.
func (s coldMigrationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ColdMigration, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ColdMigration))
	})
	return ret, err
}

// Get retrieves the ColdMigration from the indexer for a given namespace and name.
func (s coldMigrationNamespaceLister) Get(name string) (*v1alpha1.ColdMigration, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("coldmigration"), name)
	}
	return obj.(*v1alpha1.ColdMigration), nil
}
