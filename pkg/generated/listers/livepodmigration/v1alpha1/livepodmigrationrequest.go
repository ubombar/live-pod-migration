/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/ubombar/live-pod-migration/pkg/apis/livepodmigration/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LivePodMigrationRequestLister helps list LivePodMigrationRequests.
// All objects returned here must be treated as read-only.
type LivePodMigrationRequestLister interface {
	// List lists all LivePodMigrationRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LivePodMigrationRequest, err error)
	// LivePodMigrationRequests returns an object that can list and get LivePodMigrationRequests.
	LivePodMigrationRequests(namespace string) LivePodMigrationRequestNamespaceLister
	LivePodMigrationRequestListerExpansion
}

// livePodMigrationRequestLister implements the LivePodMigrationRequestLister interface.
type livePodMigrationRequestLister struct {
	indexer cache.Indexer
}

// NewLivePodMigrationRequestLister returns a new LivePodMigrationRequestLister.
func NewLivePodMigrationRequestLister(indexer cache.Indexer) LivePodMigrationRequestLister {
	return &livePodMigrationRequestLister{indexer: indexer}
}

// List lists all LivePodMigrationRequests in the indexer.
func (s *livePodMigrationRequestLister) List(selector labels.Selector) (ret []*v1alpha1.LivePodMigrationRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LivePodMigrationRequest))
	})
	return ret, err
}

// LivePodMigrationRequests returns an object that can list and get LivePodMigrationRequests.
func (s *livePodMigrationRequestLister) LivePodMigrationRequests(namespace string) LivePodMigrationRequestNamespaceLister {
	return livePodMigrationRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LivePodMigrationRequestNamespaceLister helps list and get LivePodMigrationRequests.
// All objects returned here must be treated as read-only.
type LivePodMigrationRequestNamespaceLister interface {
	// List lists all LivePodMigrationRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LivePodMigrationRequest, err error)
	// Get retrieves the LivePodMigrationRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.LivePodMigrationRequest, error)
	LivePodMigrationRequestNamespaceListerExpansion
}

// livePodMigrationRequestNamespaceLister implements the LivePodMigrationRequestNamespaceLister
// interface.
type livePodMigrationRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LivePodMigrationRequests in the indexer for a given namespace.
func (s livePodMigrationRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LivePodMigrationRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LivePodMigrationRequest))
	})
	return ret, err
}

// Get retrieves the LivePodMigrationRequest from the indexer for a given namespace and name.
func (s livePodMigrationRequestNamespaceLister) Get(name string) (*v1alpha1.LivePodMigrationRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("livepodmigrationrequest"), name)
	}
	return obj.(*v1alpha1.LivePodMigrationRequest), nil
}
